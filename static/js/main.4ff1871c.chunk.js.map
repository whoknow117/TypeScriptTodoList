{"version":3,"sources":["components/TodoList/TodoInput/TodoInput.module.scss","components/TodoList/Affairs/Affairs.module.scss","components/TodoList/TodoAffairs.module.scss","components/common/SuperButton/SupperButton.module.scss","components/common/SuperInput/SupperInput.module.scss","components/TodoList/Affairs/EditableSpan/EditablSpan.module.scss","components/TodoList/TodoButtons/TodoButtons.module.scss","components/common/SuperInput/SupperInput.tsx","components/common/SuperButton/SupperButton.tsx","components/TodoList/TodoInput/TodoInput.tsx","components/common/SuperCheckbox/SupperCheckbox.tsx","components/TodoList/Affairs/EditableSpan/EditableSpan.tsx","components/TodoList/Affairs/Affairs.tsx","components/TodoList/TodoButtons/TodoButtons.tsx","components/TodoList/TodoAffairs.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["module","exports","SupperInput","onChangeText","error","onChange","restProps","type","inputClassName","classes","common","errorInput","className","todoWrapper","e","currentTarget","value","SupperButton","filter","red","children","buttonClassName","activeBtn","redBtn","TodoInput","addItem","useState","title","setTitle","setError","form","btn","onClick","trim","span","errorSpan","SupperCheckbox","onChangeChecked","checked","EditableSpan","doneMode","changeValue","editMode","setEditMode","titleValue","setTitleValue","onBlur","autoFocus","done","onDoubleClick","Affairs","changeTaskTitle","todoID","changeTaskStatus","deleteCallBack","task","deleteTask","id","checkbox","isDone","newValue","name","refactorButton","deleteButton","TodoButtons","changeFilter","TodoList","removeTodoList","tasks","addTask","input","map","t","App","todoListID1","v1","todoListID2","todoLists","setTodoLists","setTasks","taskID","todoListID","find","newFilterValue","todoList","tl","changeTodoListTitle","newTitle","todoListTasks","filteredTodoList","newTask","newTodoListID","newTodoList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4ff1871c.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"TodoInput_todoWrapper__Exh6I\",\"form\":\"TodoInput_form__3hlvt\",\"btn\":\"TodoInput_btn__1F4cZ\",\"span\":\"TodoInput_span__29UBg\",\"errorSpan\":\"TodoInput_errorSpan__AbmWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"Affairs_todoWrapper__2BIel\",\"checkbox\":\"Affairs_checkbox__Ohjv1\",\"title\":\"Affairs_title__2gRVU\",\"refactorButton\":\"Affairs_refactorButton__1ouoI\",\"deleteButton\":\"Affairs_deleteButton__3RJjV\",\"active\":\"Affairs_active__1fnEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"TodoAffairs_todoWrapper__2dlvy\",\"active\":\"TodoAffairs_active__RBRlY\",\"tasks\":\"TodoAffairs_tasks__1fz1s\",\"title\":\"TodoAffairs_title__3-zu-\",\"input\":\"TodoAffairs_input__3wgSP\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"SupperButton_todoWrapper__14j--\",\"redBtn\":\"SupperButton_redBtn__6fai5\",\"common\":\"SupperButton_common__2hrGu\",\"activeBtn\":\"SupperButton_activeBtn__EU8FB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"SupperInput_todoWrapper__29Xn_\",\"common\":\"SupperInput_common__3pE08\",\"errorInput\":\"SupperInput_errorInput__3DQ6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"common\":\"EditablSpan_common__2dl0o\",\"done\":\"EditablSpan_done__3eaMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"TodoButtons_todoWrapper__1vLn6\",\"activeBtn\":\"TodoButtons_activeBtn__VRYa2\"};","import React, {ButtonHTMLAttributes, ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\nimport classes from './SupperInput.module.scss';\n\n\ntype DefaultButtonPropsType =  DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\nexport type SupperInputType = DefaultButtonPropsType & {\n    onChangeText?: (value: string) => void\n    error?: string\n\n}\n\nconst SupperInput:React.FC<SupperInputType> = ({onChangeText\n                                                   ,error,onChange,type\n\n                                                   , ...restProps}) => {\n\n\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e)\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n\n\n    let inputClassName = `${classes.common} ${error && classes.errorInput}`\n\n    return <div className={classes.todoWrapper}>\n        <input\n            type={\"text\"}\n            onChange={onChangeCallback}\n            className={inputClassName}\n            {...restProps}\n        />\n    </div>\n}\n\nexport default SupperInput;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\nimport classes from './SupperButton.module.scss';\nimport {AffairsPriorityType} from \"../../../App\";\n\n\ntype DefaultButtonPropsType =  DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\n\n\n\nexport type SupperButtonType = DefaultButtonPropsType & {\n     red?: boolean\n     filter?: boolean\n}\n\nconst SupperButton:React.FC<SupperButtonType> = ({filter,red, children,...restProps}) => {\n\n\n    const buttonClassName =`${classes.common} ${filter ? classes.activeBtn: \"\"}${red ? classes.redBtn : \"\"}`\n\n    return <div className={classes.todoWrapper}>\n\n        <button className={buttonClassName} {...restProps}>{children}</button>\n\n    </div>\n}\n\nexport default SupperButton;","import React, {ChangeEvent, useState} from 'react';\nimport classes from './TodoInput.module.scss';\nimport SupperInput from \"../../common/SuperInput/SupperInput\";\nimport SupperButton from \"../../common/SuperButton/SupperButton\";\n\n\nexport type TodoInputType = {\n\n    addItem: (title: string) => void\n\n\n}\n\nconst TodoInput: React.FC<TodoInputType> = ({children, addItem}) => {\n\n    const [title, setTitle] = useState<string>(\"\")\n    const [error, setError] = useState<string>(\"\")\n\n    const addItm = () => {\n\n        if (title.trim() !== \"\") {\n            addItem(title.trim())\n            setTitle(\"\")\n        } else setError(\"error\")\n\n    }\n\n\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\n        setError(\"\")\n        setTitle(e.currentTarget.value)\n    }\n\n    return <div className={classes.todoWrapper}>\n\n\n        <div className={classes.form}>\n            <SupperInput error={error} value={title} onChange={changeTitle}/>\n            <div className={classes.btn}>\n                <SupperButton onClick={addItm}>{children}</SupperButton>\n            </div>\n\n        </div>\n        <span className={`${classes.span} ${error && classes.errorSpan}`}>{error}</span>\n\n\n    </div>\n}\n\nexport default TodoInput;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport classes from './SupperCheckbox.module.scss';\r\n\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n\r\nexport type SupperCheckboxType = DefaultButtonPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n\r\n}\r\n\r\nconst SupperCheckbox: React.FC<SupperCheckboxType> = ({\r\n                                                          onChangeChecked,\r\n                                                          type,\r\n                                                          onChange,\r\n                                                          children\r\n                                                          , ...restProps\r\n                                                      }) => {\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n        onChangeChecked\r\n        &&\r\n        onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    return <div className={classes.todoWrapper}>\r\n\r\n        <label>\r\n            <input\r\n                type=\"checkbox\"\r\n                onChange={onChangeCallback}\r\n                {...restProps}\r\n            />\r\n        </label>\r\n    \r\n    </div>\r\n}\r\n\r\nexport default SupperCheckbox;","import React, { ChangeEvent, useState } from \"react\";\r\nimport  classes from './EditablSpan.module.scss';\r\n\r\nexport type EditableSpanType = {\r\n    title: string\r\n    changeValue: (newValue: string) => void\r\n    doneMode: boolean\r\n}\r\n\r\nconst EditableSpan:React.FC<EditableSpanType>= ({doneMode,changeValue, title}) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [titleValue, setTitleValue] =useState<string>(title);\r\n\r\n    const activatedEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivatedEditMode = () => {\r\n        setEditMode(false)\r\n        changeValue(titleValue)\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        setTitleValue( e.currentTarget.value)\r\n    }\r\n\r\n    return ( editMode ? <input onChange={changeTitle}\r\n                               value={titleValue}\r\n                               onBlur={deActivatedEditMode}\r\n                               autoFocus={true} type=\"text\"/> : <span className={`${classes.common} ${ doneMode ? classes.done : \"\"}`} onDoubleClick={activatedEditMode}>{title}</span>\r\n\r\n    )\r\n}\r\n\r\nexport default EditableSpan;","import React, {ChangeEvent} from 'react';\nimport classes from './Affairs.module.scss';\nimport {AffairsPriorityType, DefaultTasksType} from \"../../../App\";\nimport SupperCheckbox from \"../../common/SuperCheckbox/SupperCheckbox\";\nimport SupperButton from \"../../common/SuperButton/SupperButton\";\nimport EditableSpan from \"./EditableSpan/EditableSpan\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CreateIcon from '@material-ui/icons/Create';\n\n\nexport type PropsType = {\n    task: DefaultTasksType\n    deleteCallBack: (taskID: string, todoListID: string) => void\n    changeTaskStatus : (taskID: string, isDone: boolean, todoListID: string) => void\n    todoID: string\n    changeTaskTitle:(taskID: string, title: string, todoListID: string) => void\n\n}\n\nconst Affairs:React.FC<PropsType> = ({ changeTaskTitle,todoID, changeTaskStatus, deleteCallBack, task, ...restProps}) => {\n\n    const deleteTask = () => {deleteCallBack(task.id,todoID) }\n    const changeStatus = (e: ChangeEvent<HTMLInputElement>) => {changeTaskStatus(task.id, e.currentTarget.checked,todoID)}\n\n\n    const  changeTitle = (newValue:string) => {changeTaskTitle(task.id,newValue, todoID)}\n\n    return <div className={classes.todoWrapper}>\n\n        <span className={classes.checkbox}>\n            <SupperCheckbox checked={task.isDone} onChange={changeStatus}/>\n        </span>\n        <p className={classes.title}>\n            <EditableSpan doneMode={task.isDone} changeValue={changeTitle} title={task.name}/>\n        </p>\n        <div className={classes.refactorButton}>\n            <SupperButton red onClick={deleteTask}> </SupperButton>\n\n            <CreateIcon/>\n        </div>\n        <div className={classes.deleteButton}>\n            <SupperButton red onClick={deleteTask}> </SupperButton>\n\n            <DeleteForeverIcon/>\n        </div>\n    </div>\n}\n\nexport default Affairs;","import React from 'react';\nimport classes from './TodoButtons.module.scss';\nimport {AffairsPriorityType, DefaultTasksType} from \"../../../App\";\nimport SupperButton from \"../../common/SuperButton/SupperButton\";\n\n\n\nexport type TodoButtonsType = {\n    changeFilter:(filter: AffairsPriorityType, todoListID:string) => void\n    todoID: string\n    filter: AffairsPriorityType\n}\n\nconst TodoButtons:React.FC<TodoButtonsType> = ({filter, todoID, changeFilter}) => {\n\n\n\n    const setAll = () => {changeFilter(\"all\", todoID)}\n    const setComplete = () => {changeFilter(\"complete\", todoID)}\n    const setActive = () => {changeFilter(\"active\", todoID)}\n\n    return <div className={classes.todoWrapper}>\n\n        <SupperButton filter={filter === 'all'} onClick={setAll}>all</SupperButton>\n        <SupperButton filter={filter === 'complete'} onClick={setComplete}>complete</SupperButton>\n        <SupperButton filter={filter === 'active'} onClick={setActive}>active</SupperButton>\n\n\n    </div>\n}\n\nexport default TodoButtons;","import React, {ChangeEvent, useState} from 'react';\nimport classes from './TodoAffairs.module.scss';\nimport TodoInput from \"./TodoInput/TodoInput\";\nimport Affairs from \"./Affairs/Affairs\";\nimport TodoButtons from \"./TodoButtons/TodoButtons\";\nimport {AffairsPriorityType, DefaultTasksType} from \"../../App\";\n\n\nexport type TodoListType = {\n    tasks: Array<DefaultTasksType>\n    changeFilter: (newFilterValue: AffairsPriorityType, todoListID: string) => void\n    deleteCallBack: (taskID: string, todoListID: string) => void\n    addTask: (title: string, todoListID: string) => void\n    changeTaskStatus: (taskID: string, isDone: boolean, todoListID: string) => void\n    todoID: string\n    title: string\n    changeTaskTitle: (taskID: string, title: string, todoListID: string) => void\n    removeTodoList: (todoListID: string) => void\n    filter:AffairsPriorityType\n    changeTodoListTitle: (newTitle: string, todoListID: string) => void\n}\n\nconst TodoList: React.FC<TodoListType> = ({filter,changeTaskTitle, title, removeTodoList, todoID, tasks, changeTaskStatus, addTask, deleteCallBack, changeFilter}) => {\n\n    const addItem = (title: string) => {\n        addTask(title, todoID)\n    }\n\n    return <div className={classes.todoWrapper}>\n        <h3 className={classes.title}>{title}</h3>\n\n        <div className={classes.input}>\n            <TodoInput addItem={addItem}>addTask</TodoInput>\n        </div>\n\n        <div className={classes.tasks}>\n            {tasks.map(t => <Affairs\n                changeTaskTitle={changeTaskTitle}\n                key={t.id}\n\n                changeTaskStatus={changeTaskStatus}\n                task={t}\n                todoID={todoID}\n                deleteCallBack={deleteCallBack}\n            />)}\n        </div>\n        <TodoButtons  filter={filter} todoID={todoID} changeFilter={changeFilter}/>\n\n\n    </div>\n}\n\nexport default TodoList;","import React, {ChangeEvent, useState} from 'react';\n\nimport './App.css';\nimport TodoList from \"./components/TodoList/TodoAffairs\";\nimport {v1} from \"uuid\";\nimport TodoInput from \"./components/TodoList/TodoInput/TodoInput\";\n\n\nexport type DefaultTasksType = {\n    id: string\n    name: string\n    isDone: boolean\n}\nexport type AffairsPriorityType = \"all\" | \"complete\" | \"active\"\n\nexport type TaskStateType = {\n    [key: string]: Array<DefaultTasksType>\n}\n\nexport type TodoListType = {\n    id: string\n    title: string\n    filter: AffairsPriorityType\n}\n\n\n\n\nfunction App() {\n\n\n\n    const todoListID1 = v1();\n    const todoListID2 = v1();\n\n    const [todoLists, setTodoLists] = useState<Array<TodoListType>>([\n        {id: todoListID1, title: \"What to learn\", filter: \"all\"},\n        {id: todoListID2, title: \"What to eat\", filter: \"all\"},\n    ])\n\n    const [tasks, setTasks] = useState<TaskStateType>({\n        [todoListID1] : [\n            {id: v1(), name: \"React\", isDone: false},\n            {id: v1(), name: \"Html\", isDone: false},\n            {id: v1(), name: \"Css\", isDone: false},\n            {id: v1(), name: \"Games\", isDone: true},\n        ],\n        [todoListID2] : [\n            {id: v1(), name: \"React\", isDone: false},\n            {id: v1(), name: \"Html\", isDone: false},\n            {id: v1(), name: \"Css\", isDone: false},\n            {id: v1(), name: \"Games\", isDone: true},\n        ],\n    })\n\n\n    const changeTaskStatus = (taskID: string, isDone: boolean, todoListID: string) => {\n        const todoListTasks = tasks[todoListID]\n\n        const task = todoListTasks.find( task => task.id === taskID)\n        if(task) {\n            task.isDone = isDone\n            setTasks({...tasks})\n        }\n\n    }\n\n    const changeTaskTitle = (taskID: string, title: string, todoListID: string) => {\n        const todoListTasks = tasks[todoListID]\n\n        const task = todoListTasks.find( task => task.id === taskID)\n        if(task) {\n            task.name = title\n            setTasks({...tasks})\n        }\n\n    }\n\n    const changeFilter = (newFilterValue: AffairsPriorityType, todoListID: string) => {\n        const todoList = todoLists.find( tl => tl.id === todoListID)\n        if(todoList) {\n            todoList.filter = newFilterValue\n        }\n        setTodoLists([...todoLists])\n    }\n\n    const changeTodoListTitle = (newTitle: string, todoListID: string) => {\n        const todoList = todoLists.find( tl => tl.id === todoListID)\n        if(todoList) {\n            todoList.title = newTitle\n        }\n        setTodoLists([...todoLists])\n    }\n\n    const deleteCallBack = (taskID: string, todoListID: string) => {\n        const todoListTasks = tasks[todoListID];\n        tasks[todoListID] = todoListTasks.filter( task => task.id !== taskID)\n        setTasks({...tasks})\n\n    }\n    const removeTodoList = (todoListID: string) => {\n        const filteredTodoList = todoLists.filter( tl => tl.id !== todoListID)\n        setTodoLists(filteredTodoList)\n        delete tasks[todoListID]\n        setTasks({...tasks})\n    }\n\n    const addTask = (title: string,todoListID: string) => {\n\n        const newTask: DefaultTasksType = {\n            id: v1(),\n            name: title,\n            isDone: false\n        }\n        tasks[todoListID] = [ newTask,...tasks[todoListID]]\n        setTasks({...tasks})\n    }\n    const addTodoList = (title: string) => {\n        const newTodoListID: string = v1()\n        const newTodoList: TodoListType = {\n            id: newTodoListID,\n            title: title,\n            filter: \"all\"\n        }\n        setTodoLists(todoLists=>[  ...todoLists,newTodoList])\n        setTasks(tasks => ({...tasks,[newTodoListID]:[]}))\n    }\n\n    return (\n\n        <div className=\"App\">\n            <div className='createTodo'>\n                <TodoInput addItem={addTodoList}>addTodo</TodoInput>\n            </div>\n            <div className=\"todoLists\">\n                {todoLists.map( tl => {\n\n                    let todoListTasks = tasks[tl.id]\n                    if (tl.filter === \"complete\") {\n                        todoListTasks = tasks[tl.id].filter( task => task.isDone === true )\n                    }\n                    if (tl.filter === \"active\") {\n                        todoListTasks =  tasks[tl.id].filter( task => task.isDone === false)\n                    }\n\n\n                    return (\n                        <div>\n\n                            <TodoList\n                                todoID={tl.id}\n                                key={tl.id}\n                                title={tl.title}\n                                filter={tl.filter}\n                                tasks={todoListTasks}\n                                changeFilter={changeFilter}\n                                deleteCallBack={deleteCallBack}\n                                addTask={addTask}\n                                changeTaskStatus={changeTaskStatus}\n                                removeTodoList={removeTodoList}\n                                changeTaskTitle={changeTaskTitle}\n                                changeTodoListTitle={changeTodoListTitle}\n                            />\n                        </div>\n                    )\n                })}\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}