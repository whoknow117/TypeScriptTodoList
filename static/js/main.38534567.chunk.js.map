{"version":3,"sources":["components/common/SuperButton/SupperButton.module.scss","components/common/SuperInput/SupperInput.module.scss","components/TodoList/Affairs/Affairs.module.scss","components/TodoList/TodoButtons/TodoButtons.module.scss","components/common/SuperInput/SupperInput.tsx","components/common/SuperButton/SupperButton.tsx","components/TodoList/TodoInput/TodoInput.tsx","components/common/SuperCheckbox/SupperCheckbox.tsx","components/TodoList/Affairs/EditableSpan/EditableSpan.tsx","components/TodoList/Affairs/Affairs.tsx","components/TodoList/TodoButtons/TodoButtons.tsx","components/TodoList/TodoAffairs.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/TodoList/TodoAffairs.module.scss","components/TodoList/Affairs/EditableSpan/EditablSpan.module.scss","components/TodoList/TodoInput/TodoInput.module.scss"],"names":["module","exports","SupperInput","onEnter","onKeyPress","onChangeText","error","onChange","restProps","type","inputClassName","classes","common","errorInput","className","todoWrapper","e","currentTarget","value","key","SupperButton","filter","red","children","buttonClassName","activeBtn","redBtn","TodoInput","addItem","useState","title","setTitle","setError","addItm","trim","form","btn","onClick","span","errorSpan","SupperCheckbox","onChangeChecked","checked","EditableSpan","task","deleteCallBack","todoID","doneMode","changeValue","editMode","setEditMode","titleValue","setTitleValue","activatedEditMode","deActivatedEditMode","wrapper","input","onBlur","autoFocus","done","onDoubleClick","refactorButton","deleteButton","id","Affairs","taskID","changeTaskTitle","changeTaskStatus","checkbox","isDone","newValue","name","TodoButtons","changeFilter","TodoList","removeTodoList","tasks","addTask","activeTasks","t","doneTasks","map","infoBlock","info","length","App","todoListID1","v1","todoLists","setTodoLists","setTasks","todoListID","find","newFilterValue","todoList","tl","changeTodoListTitle","newTitle","todoListTasks","filteredTodoList","newTask","newTodoListID","newTodoList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.38534567.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"SupperButton_todoWrapper__14j--\",\"redBtn\":\"SupperButton_redBtn__6fai5\",\"common\":\"SupperButton_common__2hrGu\",\"activeBtn\":\"SupperButton_activeBtn__EU8FB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"SupperInput_todoWrapper__29Xn_\",\"common\":\"SupperInput_common__3pE08\",\"errorInput\":\"SupperInput_errorInput__3DQ6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"Affairs_todoWrapper__2BIel\",\"checkbox\":\"Affairs_checkbox__Ohjv1\",\"title\":\"Affairs_title__2gRVU\",\"refactorButton\":\"Affairs_refactorButton__1ouoI\",\"deleteButton\":\"Affairs_deleteButton__3RJjV\",\"active\":\"Affairs_active__1fnEa\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"TodoButtons_todoWrapper__1vLn6\",\"activeBtn\":\"TodoButtons_activeBtn__VRYa2\"};","import React, {KeyboardEvent,ButtonHTMLAttributes, ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\nimport classes from './SupperInput.module.scss';\n\n\ntype DefaultButtonPropsType =  DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\nexport type SupperInputType = DefaultButtonPropsType & {\n    onChangeText?: (value: string) => void\n    error?: string\n    onEnter?: () => void\n\n}\n\nconst SupperInput:React.FC<SupperInputType> = ({onEnter,onKeyPress, onChangeText\n                                                   ,error,onChange,type\n\n                                                   , ...restProps}) => {\n\n\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n        onChange\n        && onChange(e)\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e:KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\"\n        && onEnter\n        && onEnter()\n    }\n\n    let inputClassName = `${classes.common} ${error && classes.errorInput}`\n\n    return <div className={classes.todoWrapper}>\n        <input\n            type={\"text\"}\n            onChange={onChangeCallback}\n            className={inputClassName}\n            {...restProps}\n            onKeyPress={onKeyPressCallback}\n        />\n    </div>\n}\n\nexport default SupperInput;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\nimport classes from './SupperButton.module.scss';\nimport {AffairsPriorityType} from \"../../../App\";\n\n\ntype DefaultButtonPropsType =  DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\n\n\n\nexport type SupperButtonType = DefaultButtonPropsType & {\n     red?: boolean\n     filter?: boolean\n}\n\nconst SupperButton:React.FC<SupperButtonType> = ({filter,red, children,...restProps}) => {\n\n\n    const buttonClassName =`${classes.common} ${filter ? classes.activeBtn: \"\"}${red ? classes.redBtn : \"\"}`\n\n    return <div className={classes.todoWrapper}>\n\n        <button className={buttonClassName} {...restProps}>{children}</button>\n\n    </div>\n}\n\nexport default SupperButton;","import React, {ChangeEvent, useState} from 'react';\nimport classes from './TodoInput.module.scss';\nimport SupperInput from \"../../common/SuperInput/SupperInput\";\nimport SupperButton from \"../../common/SuperButton/SupperButton\";\n\n\nexport type TodoInputType = {\n\n    addItem: (title: string) => void\n\n\n}\n\nconst TodoInput: React.FC<TodoInputType> = ({children, addItem}) => {\n\n    const [title, setTitle] = useState<string>(\"\")\n    const [error, setError] = useState<string>(\"\")\n\n    const addItm = () => {\n\n        if (title.trim() !== \"\") {\n            addItem(title.trim())\n            setTitle(\"\")\n        } else setError(\"error\")\n\n    }\n\n\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\n        setError(\"\")\n        setTitle(e.currentTarget.value)\n    }\n\n    return <div className={classes.todoWrapper}>\n\n\n        <div className={classes.form}>\n            <SupperInput onEnter={addItm} error={error} value={title} onChange={changeTitle}/>\n            <div className={classes.btn}>\n                <SupperButton onClick={addItm}>{children}</SupperButton>\n            </div>\n\n        </div>\n        <span className={`${classes.span} ${error && classes.errorSpan}`}>{error}</span>\n\n\n    </div>\n}\n\nexport default TodoInput;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport classes from './SupperCheckbox.module.scss';\r\n\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n\r\nexport type SupperCheckboxType = DefaultButtonPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n\r\n}\r\n\r\nconst SupperCheckbox: React.FC<SupperCheckboxType> = ({\r\n                                                          onChangeChecked,\r\n                                                          type,\r\n                                                          onChange,\r\n                                                          children\r\n                                                          , ...restProps\r\n                                                      }) => {\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n        onChangeChecked\r\n        &&\r\n        onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    return <div className={classes.todoWrapper}>\r\n\r\n        <label>\r\n            <input\r\n                type=\"checkbox\"\r\n                onChange={onChangeCallback}\r\n                {...restProps}\r\n            />\r\n        </label>\r\n    \r\n    </div>\r\n}\r\n\r\nexport default SupperCheckbox;","import React, {KeyboardEvent, ChangeEvent, useState } from \"react\";\r\nimport  classes from './EditablSpan.module.scss';\r\nimport SupperButton from \"../../../common/SuperButton/SupperButton\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport {DefaultTasksType} from \"../../../../App\";\r\n\r\nexport type EditableSpanType = {\r\n    title: string\r\n    changeValue: (newValue: string) => void\r\n    doneMode: boolean\r\n    todoID: string\r\n    deleteCallBack: (taskID:string, todoID: string) => void\r\n    task: DefaultTasksType\r\n}\r\n\r\nconst EditableSpan:React.FC<EditableSpanType>= ({task,deleteCallBack,todoID,doneMode,changeValue, title}) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [titleValue, setTitleValue] =useState<string>(title);\r\n    const deleteTask = () => {deleteCallBack(task.id,todoID) }\r\n\r\n    const activatedEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivatedEditMode = () => {\r\n        setEditMode(false)\r\n        changeValue(titleValue)\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        setTitleValue( e.currentTarget.value)\r\n    }\r\n\r\n    const deactivateEditM = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\r\n\r\n        if(e.key === \"Enter\"){\r\n            deActivatedEditMode()\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return ( <div className={classes.wrapper}>\r\n\r\n            { editMode ? <input onChange={changeTitle}\r\n                                className={classes.input}\r\n                                value={titleValue}\r\n                                onKeyPress={deactivateEditM }\r\n                                onBlur={deActivatedEditMode}\r\n                                autoFocus={true} type=\"text\"/> :\r\n                <span className={`${classes.common} ${ doneMode ? classes.done : \"\"}`} onDoubleClick={activatedEditMode}>{title}</span>}\r\n            <div className={classes.refactorButton}>\r\n                <SupperButton onClick={activatedEditMode}/>\r\n                <CreateIcon/>\r\n            </div>\r\n            <div className={classes.deleteButton}>\r\n                <SupperButton onClick={deleteTask}/>\r\n                <DeleteForeverIcon/>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EditableSpan;\r\n\r\n\r\n","import React, {ChangeEvent} from 'react';\nimport classes from './Affairs.module.scss';\nimport {AffairsPriorityType, DefaultTasksType} from \"../../../App\";\nimport SupperCheckbox from \"../../common/SuperCheckbox/SupperCheckbox\";\nimport SupperButton from \"../../common/SuperButton/SupperButton\";\nimport EditableSpan from \"./EditableSpan/EditableSpan\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CreateIcon from '@material-ui/icons/Create';\n\n\nexport type PropsType = {\n    task: DefaultTasksType\n    deleteCallBack: (taskID: string, todoListID: string) => void\n    changeTaskStatus : (taskID: string, isDone: boolean, todoListID: string) => void\n    todoID: string\n    changeTaskTitle:(taskID: string, title: string, todoListID: string) => void\n    taskID: string\n}\n\nconst\n    Affairs:React.FC<PropsType> = ({taskID, changeTaskTitle,todoID, changeTaskStatus, deleteCallBack, task, ...restProps}) => {\n\n\n    const changeStatus = (e: ChangeEvent<HTMLInputElement>) => {changeTaskStatus(task.id, e.currentTarget.checked,todoID)}\n\n        const deleteTask = () => {deleteCallBack(task.id,todoID) }\n    const  changeTitle = (newValue:string) => {changeTaskTitle(task.id,newValue, todoID)}\n\n    return <div className={classes.todoWrapper}>\n\n        <span className={classes.checkbox}>\n            <SupperCheckbox checked={task.isDone} onChange={changeStatus}/>\n        </span>\n        <p className={classes.title}>\n            <EditableSpan\n                          task={task}\n                          todoID={todoID}\n                          deleteCallBack={deleteCallBack}\n                          doneMode={task.isDone}\n                          changeValue={changeTitle}\n                          title={task.name}/>\n        </p>\n        {/*<div className={classes.refactorButton}>*/}\n        {/*    <SupperButton red onClick={deleteTask}> </SupperButton>*/}\n\n        {/*    <CreateIcon/>*/}\n        {/*</div>*/}\n        {/*<div className={classes.deleteButton}>*/}\n        {/*    <SupperButton red onClick={deleteTask}> </SupperButton>*/}\n\n        {/*    <DeleteForeverIcon/>*/}\n        {/*</div>*/}\n    </div>\n}\n\nexport default Affairs;","import React from 'react';\nimport classes from './TodoButtons.module.scss';\nimport {AffairsPriorityType, DefaultTasksType} from \"../../../App\";\nimport SupperButton from \"../../common/SuperButton/SupperButton\";\n\n\n\nexport type TodoButtonsType = {\n    changeFilter:(filter: AffairsPriorityType, todoListID:string) => void\n    todoID: string\n    filter: AffairsPriorityType\n}\n\nconst TodoButtons:React.FC<TodoButtonsType> = ({filter, todoID, changeFilter}) => {\n\n\n\n    const setAll = () => {changeFilter(\"all\", todoID)}\n    const setComplete = () => {changeFilter(\"complete\", todoID)}\n    const setActive = () => {changeFilter(\"active\", todoID)}\n\n    return <div className={classes.todoWrapper}>\n\n        <SupperButton filter={filter === 'all'} onClick={setAll}>all</SupperButton>\n        <SupperButton filter={filter === 'complete'} onClick={setComplete}>complete</SupperButton>\n        <SupperButton filter={filter === 'active'} onClick={setActive}>active</SupperButton>\n\n\n    </div>\n}\n\nexport default TodoButtons;","import React, {ChangeEvent, useState} from 'react';\nimport classes from './TodoAffairs.module.scss';\nimport TodoInput from \"./TodoInput/TodoInput\";\nimport Affairs from \"./Affairs/Affairs\";\nimport TodoButtons from \"./TodoButtons/TodoButtons\";\nimport {AffairsPriorityType, DefaultTasksType} from \"../../App\";\n\n\nexport type TodoListType = {\n    tasks: Array<DefaultTasksType>\n    changeFilter: (newFilterValue: AffairsPriorityType, todoListID: string) => void\n    deleteCallBack: (taskID: string, todoListID: string) => void\n    addTask: (title: string, todoListID: string) => void\n    changeTaskStatus: (taskID: string, isDone: boolean, todoListID: string) => void\n    todoID: string\n    title: string\n    changeTaskTitle: (taskID: string, title: string, todoListID: string) => void\n    removeTodoList: (todoListID: string) => void\n    filter:AffairsPriorityType\n    changeTodoListTitle: (newTitle: string, todoListID: string) => void\n}\n\nconst TodoList: React.FC<TodoListType> = ({filter,changeTaskTitle, title, removeTodoList, todoID, tasks, changeTaskStatus, addTask, deleteCallBack, changeFilter}) => {\n\n    const addItem = (title: string) => {\n        addTask(title, todoID)\n    }\n    let activeTasks = tasks.filter(t => t.isDone === false);\n    let doneTasks = tasks.filter(t=> t.isDone === true);\n\n\n\n    return <div className={classes.todoWrapper}>\n        <h3 className={classes.title}>{title}</h3>\n\n        <div className={classes.input}>\n            <TodoInput addItem={addItem}>addTask</TodoInput>\n        </div>\n\n        <div className={classes.tasks}>\n            {tasks.map(t => <Affairs\n                changeTaskTitle={changeTaskTitle}\n                key={t.id}\n                taskID={t.id}\n                changeTaskStatus={changeTaskStatus}\n                task={t}\n                todoID={todoID}\n                deleteCallBack={deleteCallBack}\n            />)}\n        </div>\n        <TodoButtons  filter={filter} todoID={todoID} changeFilter={changeFilter}/>\n       <div className={classes.infoBlock}>\n            <span className={classes.info}>\n            tasks todo: {activeTasks.length}\n        </span>\n           <span className={classes.info}>\n            done t  asks: {doneTasks.length}\n        </span>\n       </div>\n\n\n    </div>\n}\n\nexport default TodoList;","import React, {ChangeEvent, useState} from 'react';\n\nimport './App.css';\nimport TodoList from \"./components/TodoList/TodoAffairs\";\nimport {v1} from \"uuid\";\nimport TodoInput from \"./components/TodoList/TodoInput/TodoInput\";\n\n\nexport type DefaultTasksType = {\n    id: string\n    name: string\n    isDone: boolean\n}\nexport type AffairsPriorityType = \"all\" | \"complete\" | \"active\"\n\nexport type TaskStateType = {\n    [key: string]: Array<DefaultTasksType>\n}\n\nexport type TodoListType = {\n    id: string\n    title: string\n    filter: AffairsPriorityType\n}\n\n\n\n\nfunction App() {\n\n\n\n    const todoListID1 = v1();\n    const todoListID2 = v1();\n\n    const [todoLists, setTodoLists] = useState<Array<TodoListType>>([\n        {id: todoListID1, title: \"This is just example, get the name your own TodoList higher/Введите выше название своего Списка Задач\", filter: \"all\"},\n\n    ])\n\n    const [tasks, setTasks] = useState<TaskStateType>({\n        [todoListID1] : [\n            {id: v1(), name: \"React\", isDone: false},\n            {id: v1(), name: \"Html\", isDone: false},\n            {id: v1(), name: \"Css\", isDone: false},\n            {id: v1(), name: \"Games\", isDone: true},\n        ],\n\n    })\n\n\n    const changeTaskStatus = (taskID: string, isDone: boolean, todoListID: string) => {\n        const todoListTasks = tasks[todoListID]\n\n        const task = todoListTasks.find( task => task.id === taskID)\n        if(task) {\n            task.isDone = isDone\n            setTasks({...tasks})\n        }\n\n    }\n\n    const changeTaskTitle = (taskID: string, title: string, todoListID: string) => {\n        const todoListTasks = tasks[todoListID]\n\n        const task = todoListTasks.find( task => task.id === taskID)\n        if(task) {\n            task.name = title\n            setTasks({...tasks})\n        }\n\n    }\n\n    const changeFilter = (newFilterValue: AffairsPriorityType, todoListID: string) => {\n        const todoList = todoLists.find( tl => tl.id === todoListID)\n        if(todoList) {\n            todoList.filter = newFilterValue\n        }\n        setTodoLists([...todoLists])\n    }\n\n    const changeTodoListTitle = (newTitle: string, todoListID: string) => {\n        const todoList = todoLists.find( tl => tl.id === todoListID)\n        if(todoList) {\n            todoList.title = newTitle\n        }\n        setTodoLists([...todoLists])\n    }\n\n    const deleteCallBack = (taskID: string, todoListID: string) => {\n        const todoListTasks = tasks[todoListID];\n        tasks[todoListID] = todoListTasks.filter( task => task.id !== taskID)\n        setTasks({...tasks})\n\n    }\n    const removeTodoList = (todoListID: string) => {\n        const filteredTodoList = todoLists.filter( tl => tl.id !== todoListID)\n        setTodoLists(filteredTodoList)\n        delete tasks[todoListID]\n        setTasks({...tasks})\n    }\n\n    const addTask = (title: string,todoListID: string) => {\n\n        const newTask: DefaultTasksType = {\n            id: v1(),\n            name: title,\n            isDone: false\n        }\n        tasks[todoListID] = [ newTask,...tasks[todoListID]]\n        setTasks({...tasks})\n    }\n    const addTodoList = (title: string) => {\n        const newTodoListID: string = v1()\n        const newTodoList: TodoListType = {\n            id: newTodoListID,\n            title: title,\n            filter: \"all\"\n        }\n        setTodoLists(todoLists=>[  ...todoLists,newTodoList])\n        setTasks(tasks => ({...tasks,[newTodoListID]:[]}))\n    }\n\n    return (\n\n        <div className=\"App\">\n            <div className='createTodo'>\n                <TodoInput addItem={addTodoList}>addTodo</TodoInput>\n            </div>\n            <div className=\"todoLists\">\n                {todoLists.map( tl => {\n\n                    let todoListTasks = tasks[tl.id]\n                    if (tl.filter === \"complete\") {\n                        todoListTasks = tasks[tl.id].filter( task => task.isDone === true )\n                    }\n                    if (tl.filter === \"active\") {\n                        todoListTasks =  tasks[tl.id].filter( task => task.isDone === false)\n                    }\n\n\n                    return (\n                        <div>\n\n                            <TodoList\n                                todoID={tl.id}\n                                key={tl.id}\n                                title={tl.title}\n                                filter={tl.filter}\n                                tasks={todoListTasks}\n                                changeFilter={changeFilter}\n                                deleteCallBack={deleteCallBack}\n                                addTask={addTask}\n                                changeTaskStatus={changeTaskStatus}\n                                removeTodoList={removeTodoList}\n                                changeTaskTitle={changeTaskTitle}\n                                changeTodoListTitle={changeTodoListTitle}\n                            />\n                        </div>\n                    )\n                })}\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"TodoAffairs_todoWrapper__2dlvy\",\"active\":\"TodoAffairs_active__RBRlY\",\"tasks\":\"TodoAffairs_tasks__1fz1s\",\"title\":\"TodoAffairs_title__3-zu-\",\"infoBlock\":\"TodoAffairs_infoBlock__2kqKR\",\"info\":\"TodoAffairs_info__1O81Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EditablSpan_wrapper__Tzl53\",\"input\":\"EditablSpan_input__3_n0c\",\"refactorButton\":\"EditablSpan_refactorButton__1CyXX\",\"deleteButton\":\"EditablSpan_deleteButton__XHXER\",\"active\":\"EditablSpan_active__2t1P0\",\"common\":\"EditablSpan_common__2dl0o\",\"done\":\"EditablSpan_done__3eaMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"TodoInput_todoWrapper__Exh6I\",\"form\":\"TodoInput_form__3hlvt\",\"btn\":\"TodoInput_btn__1F4cZ\",\"span\":\"TodoInput_span__29UBg\",\"errorSpan\":\"TodoInput_errorSpan__AbmWJ\"};"],"sourceRoot":""}