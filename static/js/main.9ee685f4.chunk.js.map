{"version":3,"sources":["components/common/SuperButton/SupperButton.module.scss","components/TodoList/Affairs/EditableSpan/EditablSpan.module.scss","components/common/SuperInput/SupperInput.module.scss","components/TodoList/TodoButtons/TodoButtons.module.scss","components/common/SuperInput/SupperInput.tsx","components/common/SuperButton/SupperButton.tsx","components/TodoList/TodoInput/TodoInput.tsx","components/common/SuperCheckbox/SupperCheckbox.tsx","components/TodoList/Affairs/EditableSpan/EditableSpan.tsx","components/TodoList/Affairs/Affairs.tsx","components/TodoList/TodoButtons/TodoButtons.tsx","components/TodoList/TodoAffairs.tsx","App.tsx","reportWebVitals.ts","index.tsx","components/TodoList/TodoAffairs.module.scss","components/TodoList/TodoInput/TodoInput.module.scss","components/TodoList/Affairs/Affairs.module.scss"],"names":["module","exports","SupperInput","onEnter","onKeyPress","onChangeText","error","onChange","restProps","type","inputClassName","classes","common","errorInput","className","todoWrapper","e","currentTarget","value","key","SupperButton","filter","red","children","buttonClassName","activeBtn","redBtn","TodoInput","addItem","useState","title","setTitle","setError","addItm","trim","form","btn","onClick","span","errorSpan","SupperCheckbox","onChangeChecked","checked","EditableSpan","modeOn","changeValue","editMode","setEditMode","titleValue","setTitleValue","activatedEditMode","deActivatedEditMode","wrapper","input","onBlur","autoFocus","onDoubleClick","refactorButton","Affairs","taskID","changeTaskTitle","todoID","changeTaskStatus","deleteCallBack","task","checkbox","isDone","id","done","newValue","name","deleteButton","TodoButtons","changeFilter","TodoList","changetodoListTitle","removeTodoList","tasks","addTask","activeTasks","t","doneTasks","map","infoBlock","info","length","App","todoListID1","v1","todoLists","setTodoLists","setTasks","todoListID","find","newFilterValue","todoList","tl","changeTodoListTitle","newTitle","todoListTasks","filteredTodoList","newTask","newTodoListID","newTodoList","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.9ee685f4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"SupperButton_todoWrapper__14j--\",\"redBtn\":\"SupperButton_redBtn__6fai5\",\"common\":\"SupperButton_common__2hrGu\",\"activeBtn\":\"SupperButton_activeBtn__EU8FB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"EditablSpan_wrapper__Tzl53\",\"input\":\"EditablSpan_input__3_n0c\",\"refactorButton\":\"EditablSpan_refactorButton__1CyXX\",\"deleteButton\":\"EditablSpan_deleteButton__XHXER\",\"active\":\"EditablSpan_active__2t1P0\",\"common\":\"EditablSpan_common__2dl0o\",\"done\":\"EditablSpan_done__3eaMz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"SupperInput_todoWrapper__29Xn_\",\"common\":\"SupperInput_common__3pE08\",\"errorInput\":\"SupperInput_errorInput__3DQ6j\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"TodoButtons_todoWrapper__1vLn6\",\"activeBtn\":\"TodoButtons_activeBtn__VRYa2\"};","import React, {KeyboardEvent,ButtonHTMLAttributes, ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\nimport classes from './SupperInput.module.scss';\n\n\ntype DefaultButtonPropsType =  DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\n\nexport type SupperInputType = DefaultButtonPropsType & {\n    onChangeText?: (value: string) => void\n    error?: string\n    onEnter?: () => void\n\n}\n\nconst SupperInput:React.FC<SupperInputType> = ({onEnter,onKeyPress, onChangeText\n                                                   ,error,onChange, type\n\n                                                   , ...restProps}) => {\n\n\n\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\n    onChange && onChange(e)\n        onChangeText && onChangeText(e.currentTarget.value)\n    }\n    const onKeyPressCallback = (e:KeyboardEvent<HTMLInputElement>) => {\n        onKeyPress && onKeyPress(e);\n\n        e.key === \"Enter\"\n        && onEnter\n        && onEnter()\n    }\n\n    let inputClassName = `${classes.common} ${error && classes.errorInput}`\n\n    return <div className={classes.todoWrapper}>\n        <input\n            type={\"text\"}\n            onChange={onChangeCallback}\n            className={inputClassName}\n            {...restProps}\n            onKeyPress={onKeyPressCallback}\n        />\n    </div>\n}\n\nexport default SupperInput;","import React, {ButtonHTMLAttributes, DetailedHTMLProps} from 'react';\nimport classes from './SupperButton.module.scss';\nimport {AffairsPriorityType} from \"../../../App\";\n\n\ntype DefaultButtonPropsType =  DetailedHTMLProps<ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>\n\n\n\n\nexport type SupperButtonType = DefaultButtonPropsType & {\n     red?: boolean\n     filter?: boolean\n}\n\nconst SupperButton:React.FC<SupperButtonType> = ({filter,red, children,...restProps}) => {\n\n\n    const buttonClassName =`${classes.common} ${filter ? classes.activeBtn: \"\"}${red ? classes.redBtn : \"\"}`\n\n    return <div className={classes.todoWrapper}>\n\n        <button className={buttonClassName} {...restProps}>{children}</button>\n\n    </div>\n}\n\nexport default SupperButton;","import React, {ChangeEvent, useState} from 'react';\nimport classes from './TodoInput.module.scss';\nimport SupperInput from \"../../common/SuperInput/SupperInput\";\nimport SupperButton from \"../../common/SuperButton/SupperButton\";\n\n\nexport type TodoInputType = {\n\n    addItem: (title: string) => void\n\n\n}\n\nconst TodoInput: React.FC<TodoInputType> = ({children, addItem}) => {\n\n    const [title, setTitle] = useState<string>(\"\")\n    const [error, setError] = useState<string>(\"\")\n\n    const addItm = () => {\n\n        if (title.trim() !== \"\") {\n            addItem(title.trim())\n            setTitle(\"\")\n        } else setError(\"Enter something\")\n\n    }\n\n\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\n        setError(\"\")\n        setTitle(e.currentTarget.value)\n    }\n\n    return <div className={classes.todoWrapper}>\n\n\n        <div className={classes.form}>\n            <SupperInput onEnter={addItm} error={error} value={title} onChange={changeTitle}/>\n            <div className={classes.btn}>\n                <SupperButton onClick={addItm}>{children}</SupperButton>\n            </div>\n\n        </div>\n        <span className={`${classes.span} ${error && classes.errorSpan}`}>{error}</span>\n\n\n    </div>\n}\n\nexport default TodoInput;","import React, {ChangeEvent, DetailedHTMLProps, InputHTMLAttributes} from 'react';\r\nimport classes from './SupperCheckbox.module.scss';\r\n\r\n\r\ntype DefaultButtonPropsType = DetailedHTMLProps<InputHTMLAttributes<HTMLInputElement>, HTMLInputElement>\r\n\r\n\r\nexport type SupperCheckboxType = DefaultButtonPropsType & {\r\n    onChangeChecked?: (checked: boolean) => void\r\n\r\n}\r\n\r\nconst SupperCheckbox: React.FC<SupperCheckboxType> = ({\r\n                                                          onChangeChecked,\r\n                                                          type,\r\n                                                          onChange,\r\n                                                          children\r\n                                                          , ...restProps\r\n                                                      }) => {\r\n\r\n\r\n    const onChangeCallback = (e: ChangeEvent<HTMLInputElement>) => {\r\n        onChange\r\n        && onChange(e);\r\n        onChangeChecked\r\n        &&\r\n        onChangeChecked(e.currentTarget.checked)\r\n    }\r\n\r\n    return <div className={classes.todoWrapper}>\r\n\r\n        <label>\r\n            <input\r\n                type=\"checkbox\"\r\n                onChange={onChangeCallback}\r\n                {...restProps}\r\n            />\r\n        </label>\r\n    \r\n    </div>\r\n}\r\n\r\nexport default SupperCheckbox;","import React, {KeyboardEvent, ChangeEvent, useState } from \"react\";\r\nimport  classes from './EditablSpan.module.scss';\r\nimport SupperButton from \"../../../common/SuperButton/SupperButton\";\r\nimport CreateIcon from \"@material-ui/icons/Create\";\r\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\r\nimport {DefaultTasksType} from \"../../../../App\";\r\n\r\nexport type EditableSpanType = {\r\n    title: string\r\n    changeValue: (newValue: string) => void\r\n    modeOn?: boolean\r\n\r\n\r\n\r\n}\r\n\r\nconst EditableSpan:React.FC<EditableSpanType>= ({ modeOn, changeValue, title}) => {\r\n    const [editMode, setEditMode] = useState<boolean>(false)\r\n    const [titleValue, setTitleValue] =useState<string>(title);\r\n\r\n\r\n    const activatedEditMode = () => {\r\n        setEditMode(true)\r\n    }\r\n    const deActivatedEditMode = () => {\r\n        setEditMode(false)\r\n        changeValue(titleValue)\r\n    }\r\n    const changeTitle = (e: ChangeEvent<HTMLInputElement>) => {\r\n\r\n        setTitleValue( e.currentTarget.value)\r\n    }\r\n\r\n    const deactivateEditM = (e: KeyboardEvent<HTMLInputElement>) => {\r\n\r\n\r\n        if(e.key === \"Enter\"){\r\n            deActivatedEditMode()\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return ( <div className={classes.wrapper}>\r\n\r\n            { editMode ? <input onChange={changeTitle}\r\n                                className={classes.input}\r\n                                value={titleValue}\r\n                                onKeyPress={deactivateEditM }\r\n                                onBlur={deActivatedEditMode}\r\n                                autoFocus={true} type=\"text\"/> :\r\n                <span className={`${classes.common}`} onDoubleClick={activatedEditMode}>{title}</span>}\r\n            {modeOn ? <div className={classes.refactorButton}>\r\n                <SupperButton onClick={activatedEditMode}/>\r\n                <CreateIcon/>\r\n            </div> : \"\"}\r\n\r\n        </div>\r\n\r\n    )\r\n}\r\n\r\nexport default EditableSpan;\r\n\r\n\r\n","import React, {ChangeEvent} from 'react';\nimport classes from './Affairs.module.scss';\nimport {AffairsPriorityType, DefaultTasksType} from \"../../../App\";\nimport SupperCheckbox from \"../../common/SuperCheckbox/SupperCheckbox\";\nimport SupperButton from \"../../common/SuperButton/SupperButton\";\nimport EditableSpan from \"./EditableSpan/EditableSpan\";\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport CreateIcon from '@material-ui/icons/Create';\n\n\nexport type PropsType = {\n    task: DefaultTasksType\n    deleteCallBack: (taskID: string, todoListID: string) => void\n    changeTaskStatus: (taskID: string, isDone: boolean, todoListID: string) => void\n    todoID: string\n    changeTaskTitle: (taskID: string, title: string, todoListID: string) => void\n    taskID: string\n}\n\nconst\n    Affairs: React.FC<PropsType> = ({taskID, changeTaskTitle, todoID, changeTaskStatus, deleteCallBack, task, ...restProps}) => {\n\n\n        const changeStatus = (e: ChangeEvent<HTMLInputElement>) => {\n            changeTaskStatus(task.id, e.currentTarget.checked, todoID)\n        }\n\n        const deleteTask = () => {\n            deleteCallBack(task.id, todoID)\n        }\n        const changeTaskTitleCallback = (newValue: string) => {\n            changeTaskTitle(task.id, newValue, todoID)\n        }\n\n        return <div className={classes.todoWrapper}>\n\n        <span className={classes.checkbox}>\n            <SupperCheckbox checked={task.isDone} onChange={changeStatus}/>\n        </span>\n            <p className={`${classes.title} ${task.isDone ? classes.done : \"\"}`}>\n                <EditableSpan\n                    modeOn\n                    changeValue={changeTaskTitleCallback}\n                    title={task.name}/>\n\n            </p>\n            {/*<div className={classes.refactorButton}>*/}\n            {/*    <SupperButton red onClick={deleteTask}> </SupperButton>*/}\n\n            {/*    <CreateIcon/>*/}\n            {/*</div>*/}\n            <div className={classes.deleteButton}>\n                <SupperButton red onClick={deleteTask}> </SupperButton>\n\n                <DeleteForeverIcon/>\n            </div>\n        </div>\n    }\n\nexport default Affairs;","import React from 'react';\nimport classes from './TodoButtons.module.scss';\nimport {AffairsPriorityType, DefaultTasksType} from \"../../../App\";\nimport SupperButton from \"../../common/SuperButton/SupperButton\";\n\n\n\nexport type TodoButtonsType = {\n    changeFilter:(filter: AffairsPriorityType, todoListID:string) => void\n    todoID: string\n    filter: AffairsPriorityType\n}\n\nconst TodoButtons:React.FC<TodoButtonsType> = ({filter, todoID, changeFilter}) => {\n\n\n\n    const setAll = () => {changeFilter(\"all\", todoID)}\n    const setComplete = () => {changeFilter(\"complete\", todoID)}\n    const setActive = () => {changeFilter(\"active\", todoID)}\n\n    return <div className={classes.todoWrapper}>\n\n        <SupperButton filter={filter === 'all'} onClick={setAll}>all</SupperButton>\n        <SupperButton filter={filter === 'complete'} onClick={setComplete}>complete</SupperButton>\n        <SupperButton filter={filter === 'active'} onClick={setActive}>active</SupperButton>\n\n\n    </div>\n}\n\nexport default TodoButtons;","import React, {ChangeEvent, useState} from 'react';\nimport classes from './TodoAffairs.module.scss';\nimport TodoInput from \"./TodoInput/TodoInput\";\nimport Affairs from \"./Affairs/Affairs\";\nimport TodoButtons from \"./TodoButtons/TodoButtons\";\nimport {AffairsPriorityType, DefaultTasksType} from \"../../App\";\nimport SupperInput from \"../common/SuperInput/SupperInput\";\nimport SupperButton from \"../common/SuperButton/SupperButton\";\nimport EditableSpan from \"./Affairs/EditableSpan/EditableSpan\";\n\n\nexport type TodoListType = {\n    tasks: Array<DefaultTasksType>\n    changeFilter: (newFilterValue: AffairsPriorityType, todoListID: string) => void\n    deleteCallBack: (taskID: string, todoListID: string) => void\n    addTask: (title: string, todoListID: string) => void\n    changeTaskStatus: (taskID: string, isDone: boolean, todoListID: string) => void\n    todoID: string\n    title: string\n    changeTaskTitle: (taskID: string, title: string, todoListID: string) => void\n    removeTodoList: (todoListID: string) => void\n    filter: AffairsPriorityType\n    changeTodoListTitle: (newTitle: string, todoListID: string) => void\n    changetodoListTitle: (title: string, todoListID: string) => void\n}\n\nconst TodoList: React.FC<TodoListType> = ({changetodoListTitle, filter, changeTaskTitle, title, removeTodoList, todoID, tasks, changeTaskStatus, addTask, deleteCallBack, changeFilter}) => {\n\n    const addItem = (title: string) => {\n        addTask(title, todoID)\n    }\n    let activeTasks = tasks.filter(t => t.isDone === false);\n    let doneTasks = tasks.filter(t => t.isDone === true);\n\n    const removeTodoCallback = () => {\n        removeTodoList(todoID)\n    }\n    const changeTodoListTitleCallback = (title: string) => {\n        changetodoListTitle(title, todoID)\n    }\n\n    return <div className={classes.todoWrapper}>\n        <div className={classes.title}>\n           <div className={classes.span}>\n               <EditableSpan\n\n                   changeValue={changeTodoListTitleCallback}\n                   title={title}/>\n           </div>\n            <SupperButton onClick={removeTodoCallback}>X</SupperButton>\n        </div>\n\n        <div className={classes.input}>\n            <TodoInput addItem={addItem}>addTask</TodoInput>\n        </div>\n\n        <div className={classes.tasks}>\n            {tasks.map(t => <Affairs\n                changeTaskTitle={changeTaskTitle}\n                key={t.id}\n                taskID={t.id}\n                changeTaskStatus={changeTaskStatus}\n                task={t}\n                todoID={todoID}\n                deleteCallBack={deleteCallBack}\n            />)}\n        </div>\n        <TodoButtons filter={filter} todoID={todoID} changeFilter={changeFilter}/>\n        <div className={classes.infoBlock}>\n            <span className={classes.info}>\n            tasks todo: {activeTasks.length}\n        </span>\n            <span className={classes.info}>\n            done tasks: {doneTasks.length}\n        </span>\n        </div>\n\n\n    </div>\n}\n\nexport default TodoList;","import React, {ChangeEvent, useState} from 'react';\n\nimport './App.css';\nimport TodoList from \"./components/TodoList/TodoAffairs\";\nimport {v1} from \"uuid\";\nimport TodoInput from \"./components/TodoList/TodoInput/TodoInput\";\n\n\nexport type DefaultTasksType = {\n    id: string\n    name: string\n    isDone: boolean\n}\nexport type AffairsPriorityType = \"all\" | \"complete\" | \"active\"\n\nexport type TaskStateType = {\n    [key: string]: Array<DefaultTasksType>\n}\n\nexport type TodoListType = {\n    id: string\n    title: string\n    filter: AffairsPriorityType\n}\n\n\n\n\nfunction App() {\n\n\n\n    const todoListID1 = v1();\n    const todoListID2 = v1();\n\n    const [todoLists, setTodoLists] = useState<Array<TodoListType>>([\n        {id: todoListID1, title: \"Обычный список задач\", filter: \"all\"},\n\n    ])\n\n    const [tasks, setTasks] = useState<TaskStateType>({\n        [todoListID1] : [\n            {id: v1(), name: \"React\", isDone: false},\n            {id: v1(), name: \"Html\", isDone: false},\n            {id: v1(), name: \"Css\", isDone: false},\n            {id: v1(), name: \"Games\", isDone: true},\n        ],\n\n    })\n\n\n    const changeTaskStatus = (taskID: string, isDone: boolean, todoListID: string) => {\n        const todoListTasks = tasks[todoListID]\n\n        const task = todoListTasks.find( task => task.id === taskID)\n        if(task) {\n            task.isDone = isDone\n            setTasks({...tasks})\n        }\n\n    }\n\n    const changeTaskTitle = (taskID: string, title: string, todoListID: string) => {\n        const todoListTasks = tasks[todoListID]\n\n        const task = todoListTasks.find( task => task.id === taskID)\n        if(task) {\n            task.name = title\n            setTasks({...tasks})\n        }\n\n    }\n\n    const changeFilter = (newFilterValue: AffairsPriorityType, todoListID: string) => {\n        const todoList = todoLists.find( tl => tl.id === todoListID)\n        if(todoList) {\n            todoList.filter = newFilterValue\n        }\n        setTodoLists([...todoLists])\n    }\n\n    const changeTodoListTitle = (newTitle: string, todoListID: string) => {\n        const todoList = todoLists.find( tl => tl.id === todoListID)\n        if(todoList) {\n            todoList.title = newTitle\n        }\n        setTodoLists([...todoLists])\n    }\n\n    const deleteCallBack = (taskID: string, todoListID: string) => {\n        const todoListTasks = tasks[todoListID];\n        tasks[todoListID] = todoListTasks.filter( task => task.id !== taskID)\n        setTasks({...tasks})\n\n    }\n    const removeTodoList = (todoListID: string) => {\n        const filteredTodoList = todoLists.filter( tl => tl.id !== todoListID)\n        setTodoLists(filteredTodoList)\n        delete tasks[todoListID]\n        setTasks({...tasks})\n    }\n\n    const addTask = (title: string,todoListID: string) => {\n\n        const newTask: DefaultTasksType = {\n            id: v1(),\n            name: title,\n            isDone: false\n        }\n        tasks[todoListID] = [ newTask,...tasks[todoListID]]\n        setTasks({...tasks})\n    }\n    const addTodoList = (title: string) => {\n        const newTodoListID: string = v1()\n        const newTodoList: TodoListType = {\n            id: newTodoListID,\n            title: title,\n            filter: \"all\"\n        }\n        setTodoLists(todoLists=>[  ...todoLists,newTodoList])\n        setTasks(tasks => ({...tasks,[newTodoListID]:[]}))\n    }\n    const changetodoListTitle = (title:string, todoListID:string) => {\n        const todoList = todoLists.find( tl => tl.id === todoListID)\n        if (todoList) {\n            todoList.title = title;\n            setTodoLists([...todoLists])\n        }\n\n    }\n\n    return (\n\n        <div className=\"App\">\n            <div className='createTodo'>\n                <TodoInput addItem={addTodoList}>addTodo</TodoInput>\n            </div>\n            <div className=\"todoLists\">\n                {todoLists.map( tl => {\n\n                    let todoListTasks = tasks[tl.id]\n                    if (tl.filter === \"complete\") {\n                        todoListTasks = tasks[tl.id].filter( task => task.isDone === true )\n                    }\n                    if (tl.filter === \"active\") {\n                        todoListTasks =  tasks[tl.id].filter( task => task.isDone === false)\n                    }\n\n\n                    return (\n                        <div>\n\n                            <TodoList\n                                todoID={tl.id}\n                                key={tl.id}\n                                title={tl.title}\n                                filter={tl.filter}\n                                tasks={todoListTasks}\n                                changeFilter={changeFilter}\n                                deleteCallBack={deleteCallBack}\n                                addTask={addTask}\n                                changeTaskStatus={changeTaskStatus}\n                                removeTodoList={removeTodoList}\n                                changetodoListTitle={changetodoListTitle}\n                                changeTaskTitle={changeTaskTitle}\n                                changeTodoListTitle={changeTodoListTitle}\n                            />\n                        </div>\n                    )\n                })}\n            </div>\n\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"TodoAffairs_todoWrapper__2dlvy\",\"active\":\"TodoAffairs_active__RBRlY\",\"tasks\":\"TodoAffairs_tasks__1fz1s\",\"title\":\"TodoAffairs_title__3-zu-\",\"span\":\"TodoAffairs_span__2P6Gt\",\"infoBlock\":\"TodoAffairs_infoBlock__2kqKR\",\"info\":\"TodoAffairs_info__1O81Y\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"TodoInput_todoWrapper__Exh6I\",\"form\":\"TodoInput_form__3hlvt\",\"btn\":\"TodoInput_btn__1F4cZ\",\"span\":\"TodoInput_span__29UBg\",\"errorSpan\":\"TodoInput_errorSpan__AbmWJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"todoWrapper\":\"Affairs_todoWrapper__2BIel\",\"checkbox\":\"Affairs_checkbox__Ohjv1\",\"title\":\"Affairs_title__2gRVU\",\"refactorButton\":\"Affairs_refactorButton__1ouoI\",\"deleteButton\":\"Affairs_deleteButton__3RJjV\",\"active\":\"Affairs_active__1fnEa\",\"done\":\"Affairs_done__R6dzx\"};"],"sourceRoot":""}